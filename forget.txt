begin:
vim:
--->
	折叠代码:
		zf 	一个代码折叠
		za	切折叠的状态
		zc    关闭一个折叠
		zd	删除一个折叠
		zo	打开折叠
		zj	移动折叠到下一个开始的地方,k到上一个
--->
	多窗口编辑:
		vim -on [file...] 同时打开n个文件
		:split [file] 水平分屏打开文件 vsplit 垂直打开文件
		ctrl ww          各个窗口中切换
		ctrl wj	 	 切换到下面的窗 k切换到上面窗口
		tabnew [fil  打开文件分页打开
		tabclose	关闭当前分页
		tabonly		关闭其他分页
		ctrl+pageup     切换分页
--->
	使用命令行处理文本:
		命前面加上!    对vim中的文本可以用如1，4![command]的形式操作
		!)  命令处理一个句子
		!命令前加上r会将的内容放入文本中
--->
	对一处做标记:
		mx    标记位置,x可以字(mark)
		'x    返回光标所在位置处
--->
	打开vim的选项:
		vi +n[file]   在第n行打开file
		vi + [file]   在最后一行打开file
		vi +/pattern file 以patte匹配的位置打开
		vi -R file     以只读模式打开
		vi -r        恢复缓冲区内的文件
--->
	命令模移动光标:
		n 一次移动n个letter
		0   移动到一行的开头
		$   移动到一行的末尾
		w   移动字
		动下一个标点
		G 只有一个G移动最后一行，nG移动到第n行
		r   更改一个字符，R进入替换模式
		~大小写互换
		nj  光标跳行
		y&p yy复制一行到缓冲区粘贴到光标下一行
		.  重复上一个命令
		u   撤销操作
		J   合并两行
		ctrl+F 向前滚一屏幕
		ctrl+B 滚一
		z+enter 将光标位置放到屏幕开始滚屏
		.    将光标移中间并滚屏
		z-    将光标移底滚屏
		H     移动到屏幕顶端的行nH移动到n行
		M     移动到屏幕的中间
		L     移动到屏幕低端
--->
	命令模式下保存文件并退出:
		ZZ
--->
	更改字词:
		命令模式下cw(change word)
linux:
--->
	pdf查看器:
		系统自带pdf查看evince
git:
--->
	拉去远程仓库:
		git pull [远程主机名] [远程分之][本机分支]
--->
	删除一个分支:
		git branch -d [分支名字]
		时候要合并到master
--->
	合并分支到master:
		git merge合并的分支]
--->
	列出所有分支:
		git branch
		当前面
--->
	增加一个分支:
		1.git checkout -b [分支名字]
		2.git branch [分支名字]
		git checkout [分支名字]
--->
	克隆一个git仓库:
		git clone git@github.com/[github账户明]/[.git配置文件]
--->
	的内容推送到github:
		git push -u [连接的名] master/[分支名字]
		第一次push的时候加-u参数以后不需要
--->
	增加一的远程连接:
		git remote add [名称] git@github.com:[github名字]/[.git文]
--->
	删除:
		git rm filename
--->
	git放弃工作仓修改:
		git checkout -- filename
--->
	git查与版本中最新的差别:
		git diff HEAD -- filename
		--必须要有
--->
	git查看状态:
		git status
--->
	git回退:
		git reset --hard HEAD^
		^代表回退的节点个数，可以写成HEA~100
		HEAD可以替换为版本hao
--->
	git记录:
		git log
--->
	git确认:
		git commit -m "增加提示"
--->
	git文件:
		git add filename
--->
	创建ssh:
		ssh-keygen -t rsa -C "邮箱"
network:
c++:
--->
	singleton:
		no copy no assign
